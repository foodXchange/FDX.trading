@using MudBlazor

<MudDialog>
    <DialogContent>
        <MudGrid>
            <MudItem xs="12">
                <MudPaper Class="pa-4" Elevation="0" Outlined="true">
                    <div class="d-flex align-center mb-3">
                        <MudAvatar Size="Size.Large" Color="Color.Primary" Class="mr-3">
                            <MudIcon Icon="@Icons.Material.Filled.Inventory2" />
                        </MudAvatar>
                        <div>
                            <MudText Typo="Typo.h5">@Product?.Name</MudText>
                            <MudText Typo="Typo.body2" Color="Color.Secondary">SKU: @Product?.Sku</MudText>
                        </div>
                    </div>
                    
                    <MudDivider Class="my-3" />
                    
                    <MudGrid>
                        <MudItem xs="12" md="6">
                            <MudText Typo="Typo.caption">Category</MudText>
                            <MudText Typo="Typo.body1">@Product?.Category</MudText>
                        </MudItem>
                        <MudItem xs="12" md="6">
                            <MudText Typo="Typo.caption">Price per Unit</MudText>
                            <MudText Typo="Typo.body1">â‚¬@Product?.Price.ToString("N2")/@Product?.Unit</MudText>
                        </MudItem>
                        <MudItem xs="12" md="6" Class="mt-3">
                            <MudText Typo="Typo.caption">Current Stock</MudText>
                            <MudText Typo="Typo.body1" Color="@GetStockColor()">@Product?.Stock @Product?.Unit</MudText>
                        </MudItem>
                        <MudItem xs="12" md="6" Class="mt-3">
                            <MudText Typo="Typo.caption">Status</MudText>
                            <MudChip T="string" Size="Size.Small" Color="@GetStatusColor()">
                                @Product?.Status
                            </MudChip>
                        </MudItem>
                        <MudItem xs="12" Class="mt-3">
                            <MudText Typo="Typo.caption">Last Updated</MudText>
                            <MudText Typo="Typo.body1">@Product?.LastUpdated.ToString("MMMM dd, yyyy")</MudText>
                        </MudItem>
                        @if (!string.IsNullOrEmpty(Product?.Description))
                        {
                            <MudItem xs="12" Class="mt-3">
                                <MudText Typo="Typo.caption">Description</MudText>
                                <MudText Typo="Typo.body1">@Product?.Description</MudText>
                            </MudItem>
                        }
                    </MudGrid>
                </MudPaper>
            </MudItem>
        </MudGrid>
    </DialogContent>
    <DialogActions>
        <MudButton OnClick="Cancel">Close</MudButton>
        <MudButton Color="Color.Primary" Variant="Variant.Filled" OnClick="EditProduct">Edit Product</MudButton>
    </DialogActions>
</MudDialog>

@code {
    [CascadingParameter] public IMudDialogInstance MudDialog { get; set; } = null!;
    [Parameter] public dynamic Product { get; set; } = null!;
    [Inject] private IDialogService DialogService { get; set; } = null!;

    void Cancel() => MudDialog.Cancel();
    
    void EditProduct()
    {
        MudDialog.Close(DialogResult.Ok(true));
    }
    
    private Color GetStockColor()
    {
        if (Product?.Stock > 50)
            return Color.Success;
        else if (Product?.Stock > 0)
            return Color.Warning;
        else
            return Color.Error;
    }
    
    private Color GetStatusColor()
    {
        return Product?.Status switch
        {
            "Active" => Color.Success,
            "Low Stock" => Color.Warning,
            "Out of Stock" => Color.Error,
            "Archived" => Color.Default,
            _ => Color.Default
        };
    }
}