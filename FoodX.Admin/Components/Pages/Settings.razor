@page "/settings"
@using Microsoft.AspNetCore.Authorization
@using Microsoft.EntityFrameworkCore
@using FoodX.Admin.Data
@using FoodX.Admin.Models
@inject IDbContextFactory<FoodXDbContext> DbFactory
@inject ISnackbar Snackbar
@attribute [Authorize(Roles = "Admin,SuperAdmin")]
@rendermode InteractiveServer

<PageTitle>Settings</PageTitle>

<MudContainer MaxWidth="MaxWidth.Medium" Class="mt-4">
    <MudText Typo="Typo.h3" Class="mb-4">System Settings</MudText>
    
    <MudTabs Elevation="2" Rounded="true" ApplyEffectsToContainer="true" PanelClass="pa-6">
        <MudTabPanel Text="General Settings">
            <MudCard>
                <MudCardContent>
                    <MudGrid>
                        <MudItem xs="12">
                            <MudText Typo="Typo.h6" Class="mb-3">Platform Configuration</MudText>
                        </MudItem>
                        
                        <MudItem xs="12" md="6">
                            <MudTextField Label="Platform Name" Value="@platformName" ReadOnly="@(!isEditing)" 
                                          Variant="Variant.Outlined" Class="mb-3" />
                        </MudItem>
                        <MudItem xs="12" md="6">
                            <MudTextField Label="Support Email" Value="@supportEmail" ReadOnly="@(!isEditing)" 
                                          Variant="Variant.Outlined" Class="mb-3" />
                        </MudItem>
                        
                        <MudItem xs="12">
                            <MudTextField Label="Platform Description" Lines="3" ReadOnly="@(!isEditing)"
                                          Value="@platformDescription"
                                          Variant="Variant.Outlined" Class="mb-3" />
                        </MudItem>
                        
                        <MudItem xs="12">
                            <MudSwitch @bind-Value="maintenanceMode" Label="Maintenance Mode" Color="Color.Warning" 
                                       Disabled="@(!isEditing)" />
                        </MudItem>
                    </MudGrid>
                </MudCardContent>
                <MudCardActions>
                    @if (!isEditing)
                    {
                        <MudButton Variant="Variant.Filled" Color="Color.Primary" OnClick="EnableEdit">
                            Edit Settings
                        </MudButton>
                    }
                    else
                    {
                        <MudButton Variant="Variant.Filled" Color="Color.Success" OnClick="SaveSettings">
                            Save Changes
                        </MudButton>
                        <MudButton Variant="Variant.Outlined" OnClick="CancelEdit">
                            Cancel
                        </MudButton>
                    }
                </MudCardActions>
            </MudCard>
        </MudTabPanel>
        
        <MudTabPanel Text="Email Settings">
            <MudCard>
                <MudCardContent>
                    <MudGrid>
                        <MudItem xs="12">
                            <MudText Typo="Typo.h6" Class="mb-3">Email Configuration</MudText>
                        </MudItem>
                        
                        <MudItem xs="12">
                            <MudRadioGroup @bind-Value="emailProvider">
                                <MudRadio Value="@("SendGrid")" Color="Color.Primary">SendGrid</MudRadio>
                                <MudRadio Value="@("SMTP")" Color="Color.Primary">SMTP</MudRadio>
                            </MudRadioGroup>
                        </MudItem>
                        
                        @if (emailProvider == "SendGrid")
                        {
                            <MudItem xs="12">
                                <MudTextField Label="SendGrid API Key" InputType="InputType.Password" 
                                              Value="@sendGridApiKey" ReadOnly="true"
                                              Variant="Variant.Outlined" Class="mb-3" />
                            </MudItem>
                            <MudItem xs="12" md="6">
                                <MudTextField Label="From Email" Value="@fromEmail"
                                              Variant="Variant.Outlined" Class="mb-3" />
                            </MudItem>
                            <MudItem xs="12" md="6">
                                <MudTextField Label="From Name" Value="@fromName"
                                              Variant="Variant.Outlined" Class="mb-3" />
                            </MudItem>
                        }
                        else
                        {
                            <MudItem xs="12" md="6">
                                <MudTextField Label="SMTP Host" Value="@smtpHost"
                                              Variant="Variant.Outlined" Class="mb-3" />
                            </MudItem>
                            <MudItem xs="12" md="6">
                                <MudTextField Label="SMTP Port" Value="@smtpPort"
                                              Variant="Variant.Outlined" Class="mb-3" />
                            </MudItem>
                            <MudItem xs="12" md="6">
                                <MudTextField Label="SMTP Username" Value="@smtpUsername"
                                              Variant="Variant.Outlined" Class="mb-3" />
                            </MudItem>
                            <MudItem xs="12" md="6">
                                <MudTextField Label="SMTP Password" InputType="InputType.Password"
                                              Value="@smtpPassword" Variant="Variant.Outlined" Class="mb-3" />
                            </MudItem>
                        }
                        
                        <MudItem xs="12">
                            <MudButton Variant="Variant.Outlined" Color="Color.Primary" 
                                       StartIcon="@Icons.Material.Filled.Send">
                                Test Email Configuration
                            </MudButton>
                        </MudItem>
                    </MudGrid>
                </MudCardContent>
            </MudCard>
        </MudTabPanel>
        
        <MudTabPanel Text="Security Settings">
            <MudCard>
                <MudCardContent>
                    <MudGrid>
                        <MudItem xs="12">
                            <MudText Typo="Typo.h6" Class="mb-3">Security Configuration</MudText>
                        </MudItem>
                        
                        <MudItem xs="12">
                            <MudSwitch @bind-Value="requireEmailConfirmation" 
                                       Label="Require Email Confirmation" Color="Color.Primary" />
                        </MudItem>
                        
                        <MudItem xs="12">
                            <MudSwitch @bind-Value="enableTwoFactor" 
                                       Label="Enable Two-Factor Authentication" Color="Color.Primary" />
                        </MudItem>
                        
                        <MudItem xs="12" md="6">
                            <MudNumericField @bind-Value="passwordMinLength" Label="Minimum Password Length" 
                                             Min="6" Max="20" Variant="Variant.Outlined" />
                        </MudItem>
                        
                        <MudItem xs="12" md="6">
                            <MudNumericField @bind-Value="sessionTimeout" Label="Session Timeout (minutes)" 
                                             Min="5" Max="1440" Variant="Variant.Outlined" />
                        </MudItem>
                        
                        <MudItem xs="12">
                            <MudSwitch @bind-Value="requireSpecialChars" 
                                       Label="Require Special Characters in Password" Color="Color.Primary" />
                        </MudItem>
                        
                        <MudItem xs="12">
                            <MudSwitch @bind-Value="requireNumbers" 
                                       Label="Require Numbers in Password" Color="Color.Primary" />
                        </MudItem>
                    </MudGrid>
                </MudCardContent>
            </MudCard>
        </MudTabPanel>
        
        <MudTabPanel Text="Database">
            <MudCard>
                <MudCardContent>
                    <MudGrid>
                        <MudItem xs="12">
                            <MudText Typo="Typo.h6" Class="mb-3">Database Information</MudText>
                        </MudItem>
                        
                        <MudItem xs="12">
                            <MudAlert Severity="Severity.Info" Class="mb-3">
                                Database: Azure SQL (fdx-sql-prod.database.windows.net)
                            </MudAlert>
                        </MudItem>
                        
                        @if (isLoadingStats)
                        {
                            <MudItem xs="12">
                                <MudProgressLinear Color="Color.Primary" Indeterminate="true" />
                            </MudItem>
                        }
                        
                        <MudItem xs="12" md="6">
                            <MudPaper Class="pa-4" Elevation="0" Style="background-color: var(--mud-palette-background-grey);">
                                <MudText Typo="Typo.body2">Total Users</MudText>
                                <MudText Typo="Typo.h5">@totalUsers.ToString("N0")</MudText>
                            </MudPaper>
                        </MudItem>
                        
                        <MudItem xs="12" md="6">
                            <MudPaper Class="pa-4" Elevation="0" Style="background-color: var(--mud-palette-background-grey);">
                                <MudText Typo="Typo.body2">Total Companies</MudText>
                                <MudText Typo="Typo.h5">@totalCompanies.ToString("N0")</MudText>
                            </MudPaper>
                        </MudItem>
                        
                        <MudItem xs="12" md="6">
                            <MudPaper Class="pa-4" Elevation="0" Style="background-color: var(--mud-palette-background-grey);">
                                <MudText Typo="Typo.body2">Total Suppliers</MudText>
                                <MudText Typo="Typo.h5">@totalSuppliers.ToString("N0")</MudText>
                            </MudPaper>
                        </MudItem>
                        
                        <MudItem xs="12" md="6">
                            <MudPaper Class="pa-4" Elevation="0" Style="background-color: var(--mud-palette-background-grey);">
                                <MudText Typo="Typo.body2">Total Buyers</MudText>
                                <MudText Typo="Typo.h5">@totalBuyers.ToString("N0")</MudText>
                            </MudPaper>
                        </MudItem>
                        
                        <MudItem xs="12" md="6">
                            <MudPaper Class="pa-4" Elevation="0" Style="background-color: var(--mud-palette-background-grey);">
                                <MudText Typo="Typo.body2">Total Products</MudText>
                                <MudText Typo="Typo.h5">@totalProducts.ToString("N0")</MudText>
                            </MudPaper>
                        </MudItem>
                        
                        <MudItem xs="12" md="6">
                            <MudPaper Class="pa-4" Elevation="0" Style="background-color: var(--mud-palette-background-grey);">
                                <MudText Typo="Typo.body2">Database Size</MudText>
                                <MudText Typo="Typo.h5">@databaseSize</MudText>
                            </MudPaper>
                        </MudItem>
                        
                        <MudItem xs="12" Class="mt-3">
                            <MudButton Variant="Variant.Outlined" Color="Color.Primary" 
                                       StartIcon="@Icons.Material.Filled.Refresh"
                                       OnClick="LoadDatabaseStatistics">
                                Refresh Statistics
                            </MudButton>
                            <MudButton Variant="Variant.Outlined" Color="Color.Warning" 
                                       StartIcon="@Icons.Material.Filled.Backup" Class="ml-2">
                                Backup Database
                            </MudButton>
                            <MudButton Variant="Variant.Outlined" Color="Color.Info" 
                                       StartIcon="@Icons.Material.Filled.Analytics" Class="ml-2">
                                Optimize Database
                            </MudButton>
                        </MudItem>
                    </MudGrid>
                </MudCardContent>
            </MudCard>
        </MudTabPanel>
    </MudTabs>
</MudContainer>

@code {
    private bool isEditing = false;
    private bool maintenanceMode = false;
    private string emailProvider = "SendGrid";
    private bool requireEmailConfirmation = false;
    private bool enableTwoFactor = false;
    private int passwordMinLength = 8;
    private int sessionTimeout = 30;
    private bool requireSpecialChars = true;
    private bool requireNumbers = true;
    
    // Platform settings
    private string platformName = "FoodX Trading";
    private string supportEmail = "support@fdx.trading";
    private string platformDescription = "Global food trading platform connecting suppliers and buyers";
    
    // Email settings
    private string sendGridApiKey = "SG.****************************";
    private string fromEmail = "noreply@fdx.trading";
    private string fromName = "FoodX Trading";
    private string smtpHost = "smtp.gmail.com";
    private string smtpPort = "587";
    private string smtpUsername = "admin@fdx.trading";
    private string smtpPassword = "********";
    
    // Statistics
    private int totalUsers = 0;
    private int totalCompanies = 0;
    private int totalProducts = 0;
    private int totalSuppliers = 0;
    private int totalBuyers = 0;
    private string databaseSize = "Calculating...";
    private bool isLoadingStats = true;

    protected override async Task OnInitializedAsync()
    {
        await LoadDatabaseStatistics();
    }

    private async Task LoadDatabaseStatistics()
    {
        isLoadingStats = true;
        try
        {
            using var context = await DbFactory.CreateDbContextAsync();
            
            // Get total users from AspNetUsers table (through Users property in IdentityDbContext)
            totalUsers = await context.Users.CountAsync();
            
            // Get total companies
            totalCompanies = await context.Companies.CountAsync();
            
            // Get total suppliers from FoodXSuppliers table (the populated one)
            totalSuppliers = await context.FoodXSuppliers.CountAsync();
            
            // Get total buyers from FoodXBuyers table (the populated one)
            totalBuyers = await context.FoodXBuyers.CountAsync();
            
            // Get total products
            totalProducts = await context.Products.CountAsync();
            
            // Calculate approximate database size (simplified)
            var totalRecords = totalUsers + totalCompanies + totalSuppliers + totalBuyers + totalProducts;
            if (totalRecords > 100000)
            {
                databaseSize = $"{(totalRecords * 1.5 / 1000):F1} MB (est.)";
            }
            else if (totalRecords > 10000)
            {
                databaseSize = $"{(totalRecords * 2.0 / 1000):F1} MB (est.)";
            }
            else
            {
                databaseSize = $"{(totalRecords * 3.0 / 1000):F1} MB (est.)";
            }
            
            Snackbar.Add($"Database statistics loaded successfully", Severity.Success);
        }
        catch (Exception ex)
        {
            Snackbar.Add($"Error loading database statistics: {ex.Message}", Severity.Error);
            // Set some default values if loading fails
            totalUsers = 0;
            totalCompanies = 0;
            totalSuppliers = 0;
            totalBuyers = 0;
            totalProducts = 0;
            databaseSize = "Error loading";
        }
        finally
        {
            isLoadingStats = false;
        }
    }

    private void EnableEdit()
    {
        isEditing = true;
    }

    private void CancelEdit()
    {
        isEditing = false;
    }

    private Task SaveSettings()
    {
        // Save settings logic
        isEditing = false;
        return Task.CompletedTask;
    }
}