@page "/portal/buyer/rfqs"
@using Microsoft.AspNetCore.Authorization
@attribute [Authorize(Roles = "SuperAdmin,Admin,Buyer")]
@rendermode InteractiveServer

<PageTitle>RFQs - FoodX Buyer Portal</PageTitle>

<MudContainer MaxWidth="MaxWidth.ExtraLarge" Class="mt-4">
    <MudGrid>
        <MudItem xs="12">
            <MudText Typo="Typo.h4" GutterBottom="true">
                <MudIcon Icon="@Icons.Material.Filled.RequestQuote" Class="mr-2" />
                Request for Quotations (RFQs)
            </MudText>
        </MudItem>

        <!-- Quick Stats -->
        <MudItem xs="12" sm="4">
            <MudCard>
                <MudCardContent>
                    <MudText Typo="Typo.caption">Active RFQs</MudText>
                    <MudText Typo="Typo.h4">8</MudText>
                </MudCardContent>
            </MudCard>
        </MudItem>
        
        <MudItem xs="12" sm="4">
            <MudCard>
                <MudCardContent>
                    <MudText Typo="Typo.caption">Pending Responses</MudText>
                    <MudText Typo="Typo.h4">23</MudText>
                </MudCardContent>
            </MudCard>
        </MudItem>
        
        <MudItem xs="12" sm="4">
            <MudCard>
                <MudCardContent>
                    <MudText Typo="Typo.caption">Expiring Soon</MudText>
                    <MudText Typo="Typo.h4" Color="Color.Warning">3</MudText>
                </MudCardContent>
            </MudCard>
        </MudItem>

        <!-- RFQ List -->
        <MudItem xs="12">
            <MudPaper Class="pa-4" Elevation="2">
                <div class="d-flex justify-space-between align-center mb-4">
                    <MudText Typo="Typo.h6">Your RFQs</MudText>
                    <MudButton Variant="Variant.Filled" Color="Color.Primary" 
                               StartIcon="@Icons.Material.Filled.Add"
                               Href="/portal/buyer/rfq/create">
                        Create New RFQ
                    </MudButton>
                </div>
                
                <MudTable Items="@_rfqs" Hover="true" Dense="true">
                    <HeaderContent>
                        <MudTh>RFQ #</MudTh>
                        <MudTh>Product</MudTh>
                        <MudTh>Quantity</MudTh>
                        <MudTh>Deadline</MudTh>
                        <MudTh>Responses</MudTh>
                        <MudTh>Status</MudTh>
                        <MudTh>Actions</MudTh>
                    </HeaderContent>
                    <RowTemplate>
                        <MudTd>@context.Id</MudTd>
                        <MudTd>@context.Product</MudTd>
                        <MudTd>@context.Quantity</MudTd>
                        <MudTd>@context.Deadline.ToString("MMM dd")</MudTd>
                        <MudTd>@context.Responses</MudTd>
                        <MudTd>
                            <MudChip T="string" Size="Size.Small" Color="@GetStatusColor(context.Status)">
                                @context.Status
                            </MudChip>
                        </MudTd>
                        <MudTd>
                            <MudButton Size="Size.Small" Variant="Variant.Text" Color="Color.Primary">
                                View
                            </MudButton>
                        </MudTd>
                    </RowTemplate>
                </MudTable>
            </MudPaper>
        </MudItem>
    </MudGrid>
</MudContainer>

@code {
    private List<RFQItem> _rfqs = new();
    
    protected override void OnInitialized()
    {
        // Mock data
        _rfqs = new List<RFQItem>
        {
            new RFQItem { Id = "RFQ-2024-001", Product = "Organic Tomatoes", Quantity = "500kg", Deadline = DateTime.Now.AddDays(3), Responses = 5, Status = "Active" },
            new RFQItem { Id = "RFQ-2024-002", Product = "Fresh Mozzarella", Quantity = "200kg", Deadline = DateTime.Now.AddDays(7), Responses = 3, Status = "Active" },
            new RFQItem { Id = "RFQ-2024-003", Product = "Olive Oil", Quantity = "1000L", Deadline = DateTime.Now.AddDays(1), Responses = 8, Status = "Expiring" },
        };
    }
    
    private Color GetStatusColor(string status) => status switch
    {
        "Active" => Color.Success,
        "Expiring" => Color.Warning,
        "Closed" => Color.Default,
        _ => Color.Default
    };
    
    private class RFQItem
    {
        public string Id { get; set; } = "";
        public string Product { get; set; } = "";
        public string Quantity { get; set; } = "";
        public DateTime Deadline { get; set; }
        public int Responses { get; set; }
        public string Status { get; set; } = "";
    }
}