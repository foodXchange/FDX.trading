@page "/portal/buyer/orders"
@using Microsoft.AspNetCore.Authorization
@inject NavigationManager Navigation
@inject ISnackbar Snackbar
@inject IDialogService DialogService
@attribute [Authorize(Roles = "SuperAdmin,Admin,Buyer")]
@rendermode InteractiveServer

<PageTitle>Orders - FoodX Buyer Portal</PageTitle>

<MudContainer MaxWidth="MaxWidth.ExtraLarge" Class="mt-4">
    <MudGrid>
        <MudItem xs="12">
            <MudText Typo="Typo.h4" GutterBottom="true">
                <MudIcon Icon="@Icons.Material.Filled.ShoppingCart" Class="mr-2" />
                Order Management
            </MudText>
        </MudItem>

        <!-- Quick Stats -->
        <MudItem xs="12" sm="3">
            <MudCard>
                <MudCardContent>
                    <MudText Typo="Typo.caption">Total Orders</MudText>
                    <MudText Typo="Typo.h4">24</MudText>
                </MudCardContent>
            </MudCard>
        </MudItem>
        
        <MudItem xs="12" sm="3">
            <MudCard>
                <MudCardContent>
                    <MudText Typo="Typo.caption">Pending</MudText>
                    <MudText Typo="Typo.h4" Color="Color.Warning">8</MudText>
                </MudCardContent>
            </MudCard>
        </MudItem>
        
        <MudItem xs="12" sm="3">
            <MudCard>
                <MudCardContent>
                    <MudText Typo="Typo.caption">Delivered</MudText>
                    <MudText Typo="Typo.h4" Color="Color.Success">12</MudText>
                </MudCardContent>
            </MudCard>
        </MudItem>
        
        <MudItem xs="12" sm="3">
            <MudCard>
                <MudCardContent>
                    <MudText Typo="Typo.caption">This Month</MudText>
                    <MudText Typo="Typo.h4">€45,280</MudText>
                </MudCardContent>
            </MudCard>
        </MudItem>

        <!-- Orders List -->
        <MudItem xs="12">
            <MudPaper Class="pa-4" Elevation="2">
                <div class="d-flex justify-space-between align-center mb-4">
                    <MudText Typo="Typo.h6">Your Orders</MudText>
                    <MudButton Variant="Variant.Filled" Color="Color.Primary" 
                               StartIcon="@Icons.Material.Filled.Add"
                               OnClick="CreateNewOrder">
                        Create New Order
                    </MudButton>
                </div>
                
                <MudTable Items="@_orders" Hover="true" Dense="true">
                    <HeaderContent>
                        <MudTh>Order #</MudTh>
                        <MudTh>Supplier</MudTh>
                        <MudTh>Items</MudTh>
                        <MudTh>Total</MudTh>
                        <MudTh>Order Date</MudTh>
                        <MudTh>Delivery Date</MudTh>
                        <MudTh>Status</MudTh>
                        <MudTh>Actions</MudTh>
                    </HeaderContent>
                    <RowTemplate>
                        <MudTd>@context.OrderNumber</MudTd>
                        <MudTd>@context.Supplier</MudTd>
                        <MudTd>@context.ItemCount items</MudTd>
                        <MudTd>€@context.Total.ToString("N2")</MudTd>
                        <MudTd>@context.OrderDate.ToString("MMM dd")</MudTd>
                        <MudTd>@context.DeliveryDate.ToString("MMM dd")</MudTd>
                        <MudTd>
                            <MudChip T="string" Size="Size.Small" Color="@GetStatusColor(context.Status)">
                                @context.Status
                            </MudChip>
                        </MudTd>
                        <MudTd>
                            <MudButton Size="Size.Small" Variant="Variant.Text" Color="Color.Primary"
                                       OnClick="@(() => ViewOrder(context))">
                                View
                            </MudButton>
                            <MudButton Size="Size.Small" Variant="Variant.Text" Color="Color.Secondary"
                                       OnClick="@(() => TrackOrder(context))">
                                Track
                            </MudButton>
                        </MudTd>
                    </RowTemplate>
                </MudTable>
            </MudPaper>
        </MudItem>
    </MudGrid>
</MudContainer>

@code {
    private List<OrderItem> _orders = new();
    
    protected override void OnInitialized()
    {
        // Mock data
        _orders = new List<OrderItem>
        {
            new OrderItem { OrderNumber = "ORD-2024-001", Supplier = "Italian Farms", ItemCount = 3, Total = 1250.50m, OrderDate = DateTime.Now.AddDays(-5), DeliveryDate = DateTime.Now.AddDays(2), Status = "Pending" },
            new OrderItem { OrderNumber = "ORD-2024-002", Supplier = "Dutch Dairy", ItemCount = 5, Total = 2340.80m, OrderDate = DateTime.Now.AddDays(-3), DeliveryDate = DateTime.Now.AddDays(1), Status = "Shipped" },
            new OrderItem { OrderNumber = "ORD-2024-003", Supplier = "Spanish Oils", ItemCount = 2, Total = 890.25m, OrderDate = DateTime.Now.AddDays(-7), DeliveryDate = DateTime.Now.AddDays(-1), Status = "Delivered" },
            new OrderItem { OrderNumber = "ORD-2024-004", Supplier = "French Bakery", ItemCount = 8, Total = 456.75m, OrderDate = DateTime.Now.AddDays(-2), DeliveryDate = DateTime.Now.AddDays(3), Status = "Processing" },
        };
    }
    
    private Color GetStatusColor(string status) => status switch
    {
        "Pending" => Color.Warning,
        "Processing" => Color.Info,
        "Shipped" => Color.Primary,
        "Delivered" => Color.Success,
        "Cancelled" => Color.Error,
        _ => Color.Default
    };
    
    private void CreateNewOrder()
    {
        // Navigate to create order page or open dialog
        Navigation.NavigateTo("/portal/buyer/order/create");
    }
    
    private void ViewOrder(OrderItem order)
    {
        // Navigate to order details page
        Navigation.NavigateTo($"/portal/buyer/order/{order.OrderNumber}");
    }
    
    private void TrackOrder(OrderItem order)
    {
        // Open tracking dialog or navigate to tracking page
        Snackbar.Add($"Tracking order {order.OrderNumber}: {order.Status}", Severity.Info);
        // In a real app, you would open a tracking dialog or navigate to a tracking page
    }
    
    private class OrderItem
    {
        public string OrderNumber { get; set; } = "";
        public string Supplier { get; set; } = "";
        public int ItemCount { get; set; }
        public decimal Total { get; set; }
        public DateTime OrderDate { get; set; }
        public DateTime DeliveryDate { get; set; }
        public string Status { get; set; } = "";
    }
}