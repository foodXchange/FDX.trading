@page "/portal/supplier/products/add"
@using Microsoft.AspNetCore.Authorization
@attribute [Authorize(Roles = "SuperAdmin,Admin,Supplier")]
@inject NavigationManager Navigation
@inject ISnackbar Snackbar
@rendermode InteractiveServer

<PageTitle>Add Product - FoodX Supplier Portal</PageTitle>

<MudContainer MaxWidth="MaxWidth.Large" Class="mt-4">
    <MudGrid>
        <MudItem xs="12">
            <MudBreadcrumbs Items="_breadcrumbs" Class="mb-4"></MudBreadcrumbs>
            
            <MudText Typo="Typo.h4" GutterBottom="true">
                <MudIcon Icon="@Icons.Material.Filled.Add" Class="mr-2" />
                Add New Product
            </MudText>
        </MudItem>

        <MudItem xs="12" md="8">
            <MudPaper Class="pa-6" Elevation="2">
                <EditForm Model="@productModel" OnValidSubmit="HandleSubmit">
                    <DataAnnotationsValidator />
                    
                    <MudGrid>
                        <!-- Basic Information -->
                        <MudItem xs="12">
                            <MudText Typo="Typo.h6" Class="mb-4">Basic Information</MudText>
                        </MudItem>
                        
                        <MudItem xs="12" sm="6">
                            <MudTextField @bind-Value="productModel.Name" 
                                        Label="Product Name" 
                                        Required="true"
                                        For="@(() => productModel.Name)"
                                        HelperText="Enter the product name as it will appear to buyers" />
                        </MudItem>
                        
                        <MudItem xs="12" sm="6">
                            <MudTextField @bind-Value="productModel.Sku" 
                                        Label="SKU" 
                                        Required="true"
                                        For="@(() => productModel.Sku)"
                                        HelperText="Internal product identifier" />
                        </MudItem>
                        
                        <MudItem xs="12">
                            <MudTextField @bind-Value="productModel.Description" 
                                        Label="Description" 
                                        Lines="4"
                                        For="@(() => productModel.Description)"
                                        HelperText="Detailed product description for buyers" />
                        </MudItem>
                        
                        <MudItem xs="12" sm="6">
                            <MudSelect @bind-Value="productModel.Category" Label="Category" Required="true">
                                <MudSelectItem Value="@("Dairy")">Dairy Products</MudSelectItem>
                                <MudSelectItem Value="@("Meat")">Meat & Poultry</MudSelectItem>
                                <MudSelectItem Value="@("Vegetables")">Fresh Vegetables</MudSelectItem>
                                <MudSelectItem Value="@("Fruits")">Fresh Fruits</MudSelectItem>
                                <MudSelectItem Value="@("Grains")">Grains & Cereals</MudSelectItem>
                                <MudSelectItem Value="@("Beverages")">Beverages</MudSelectItem>
                                <MudSelectItem Value="@("Spices")">Spices & Herbs</MudSelectItem>
                                <MudSelectItem Value="@("Oils")">Oils & Condiments</MudSelectItem>
                            </MudSelect>
                        </MudItem>
                        
                        <MudItem xs="12" sm="6">
                            <MudTextField @bind-Value="productModel.Brand" 
                                        Label="Brand" 
                                        For="@(() => productModel.Brand)" />
                        </MudItem>

                        <!-- Pricing & Inventory -->
                        <MudItem xs="12">
                            <MudDivider Class="my-4" />
                            <MudText Typo="Typo.h6" Class="mb-4">Pricing & Inventory</MudText>
                        </MudItem>
                        
                        <MudItem xs="12" sm="4">
                            <MudNumericField @bind-Value="productModel.Price" 
                                           Label="Price per Unit" 
                                           Required="true"
                                           Format="N2"
                                           Adornment="Adornment.Start"
                                           AdornmentText="â‚¬" />
                        </MudItem>
                        
                        <MudItem xs="12" sm="4">
                            <MudSelect @bind-Value="productModel.Unit" Label="Unit" Required="true">
                                <MudSelectItem Value="@("Kg")">Kilogram (Kg)</MudSelectItem>
                                <MudSelectItem Value="@("Liter")">Liter</MudSelectItem>
                                <MudSelectItem Value="@("Piece")">Piece</MudSelectItem>
                                <MudSelectItem Value="@("Box")">Box</MudSelectItem>
                                <MudSelectItem Value="@("Dozen")">Dozen</MudSelectItem>
                                <MudSelectItem Value="@("Gram")">Gram (g)</MudSelectItem>
                                <MudSelectItem Value="@("ML")">Milliliter (mL)</MudSelectItem>
                            </MudSelect>
                        </MudItem>
                        
                        <MudItem xs="12" sm="4">
                            <MudNumericField @bind-Value="productModel.Stock" 
                                           Label="Current Stock" 
                                           Required="true" />
                        </MudItem>
                        
                        <MudItem xs="12" sm="4">
                            <MudNumericField @bind-Value="productModel.MinOrderQuantity" 
                                           Label="Minimum Order Qty" 
                                           Required="true" />
                        </MudItem>
                        
                        <MudItem xs="12" sm="4">
                            <MudNumericField @bind-Value="productModel.ReorderLevel" 
                                           Label="Reorder Level" 
                                           HelperText="Alert when stock falls below this level" />
                        </MudItem>
                        
                        <MudItem xs="12" sm="4">
                            <MudNumericField @bind-Value="productModel.LeadTimeDays" 
                                           Label="Lead Time (Days)" 
                                           HelperText="Days needed to fulfill orders" />
                        </MudItem>

                        <!-- Product Specifications -->
                        <MudItem xs="12">
                            <MudDivider Class="my-4" />
                            <MudText Typo="Typo.h6" Class="mb-4">Product Specifications</MudText>
                        </MudItem>
                        
                        <MudItem xs="12" sm="6">
                            <MudTextField @bind-Value="productModel.Origin" 
                                        Label="Country of Origin" />
                        </MudItem>
                        
                        <MudItem xs="12" sm="6">
                            <MudDatePicker @bind-Date="productModel.ExpiryDate" 
                                         Label="Expiry Date (if applicable)" />
                        </MudItem>
                        
                        <MudItem xs="12" sm="6">
                            <MudTextField @bind-Value="productModel.StorageInstructions" 
                                        Label="Storage Instructions" />
                        </MudItem>
                        
                        <MudItem xs="12" sm="6">
                            <MudSwitch @bind-Value="productModel.IsOrganic" 
                                     Label="Organic Product" 
                                     Color="Color.Success" />
                        </MudItem>

                        <!-- Certifications -->
                        <MudItem xs="12">
                            <MudText Typo="Typo.subtitle1" Class="mb-2">Certifications</MudText>
                            <div class="d-flex flex-wrap">
                                <MudCheckBox @bind-Value="productModel.IsHalal" Label="Halal" Class="mr-4" />
                                <MudCheckBox @bind-Value="productModel.IsKosher" Label="Kosher" Class="mr-4" />
                                <MudCheckBox @bind-Value="productModel.IsGlutenFree" Label="Gluten Free" Class="mr-4" />
                                <MudCheckBox @bind-Value="productModel.IsVegan" Label="Vegan" Class="mr-4" />
                                <MudCheckBox @bind-Value="productModel.IsFairTrade" Label="Fair Trade" />
                            </div>
                        </MudItem>

                        <!-- Actions -->
                        <MudItem xs="12" Class="mt-6">
                            <div class="d-flex justify-end">
                                <MudButton Variant="Variant.Text" 
                                         Color="Color.Secondary" 
                                         Href="/portal/supplier/products"
                                         Class="mr-3">
                                    Cancel
                                </MudButton>
                                <MudButton ButtonType="ButtonType.Submit"
                                         Variant="Variant.Filled" 
                                         Color="Color.Primary"
                                         StartIcon="@Icons.Material.Filled.Save"
                                         Disabled="@_isLoading">
                                    @if (_isLoading)
                                    {
                                        <MudProgressCircular Class="ms-n1" Size="Size.Small" Indeterminate="true"/>
                                        <MudText Class="ms-2">Saving...</MudText>
                                    }
                                    else
                                    {
                                        <MudText>Save Product</MudText>
                                    }
                                </MudButton>
                            </div>
                        </MudItem>
                    </MudGrid>
                </EditForm>
            </MudPaper>
        </MudItem>

        <MudItem xs="12" md="4">
            <MudPaper Class="pa-4" Elevation="1">
                <MudText Typo="Typo.h6" GutterBottom="true">
                    <MudIcon Icon="@Icons.Material.Filled.Info" Class="mr-2" />
                    Tips for Adding Products
                </MudText>
                <MudList T="string">
                    <MudListItem T="string" Icon="@Icons.Material.Filled.CheckCircle" IconColor="Color.Success">
                        <MudText Typo="Typo.body2">Use clear, descriptive product names</MudText>
                    </MudListItem>
                    <MudListItem T="string" Icon="@Icons.Material.Filled.CheckCircle" IconColor="Color.Success">
                        <MudText Typo="Typo.body2">Include high-quality product images</MudText>
                    </MudListItem>
                    <MudListItem T="string" Icon="@Icons.Material.Filled.CheckCircle" IconColor="Color.Success">
                        <MudText Typo="Typo.body2">Set competitive pricing</MudText>
                    </MudListItem>
                    <MudListItem T="string" Icon="@Icons.Material.Filled.CheckCircle" IconColor="Color.Success">
                        <MudText Typo="Typo.body2">Keep inventory levels updated</MudText>
                    </MudListItem>
                    <MudListItem T="string" Icon="@Icons.Material.Filled.CheckCircle" IconColor="Color.Success">
                        <MudText Typo="Typo.body2">Add relevant certifications</MudText>
                    </MudListItem>
                </MudList>
            </MudPaper>
        </MudItem>
    </MudGrid>
</MudContainer>

@code {
    private bool _isLoading = false;
    private ProductModel productModel = new();
    
    private List<BreadcrumbItem> _breadcrumbs = new List<BreadcrumbItem>
    {
        new BreadcrumbItem("Supplier Portal", "/portal/supplier"),
        new BreadcrumbItem("Products", "/portal/supplier/products"),
        new BreadcrumbItem("Add Product", null, true)
    };

    private async Task HandleSubmit()
    {
        _isLoading = true;
        
        try
        {
            // Simulate API call
            await Task.Delay(2000);
            
            // In real implementation, save to database
            // await ProductService.CreateProductAsync(productModel);
            
            // Navigate back to products page
            Navigation.NavigateTo("/portal/supplier/products");
        }
        catch (Exception ex)
        {
            // Handle error
            Snackbar.Add($"Error saving product: {ex.Message}", Severity.Error);
        }
        finally
        {
            _isLoading = false;
        }
    }
    
    public class ProductModel
    {
        public string Name { get; set; } = "";
        public string Sku { get; set; } = "";
        public string Description { get; set; } = "";
        public string Category { get; set; } = "";
        public string Brand { get; set; } = "";
        public decimal Price { get; set; }
        public string Unit { get; set; } = "";
        public int Stock { get; set; }
        public int MinOrderQuantity { get; set; } = 1;
        public int ReorderLevel { get; set; } = 10;
        public int LeadTimeDays { get; set; } = 3;
        public string Origin { get; set; } = "";
        public DateTime? ExpiryDate { get; set; }
        public string StorageInstructions { get; set; } = "";
        public bool IsOrganic { get; set; }
        public bool IsHalal { get; set; }
        public bool IsKosher { get; set; }
        public bool IsGlutenFree { get; set; }
        public bool IsVegan { get; set; }
        public bool IsFairTrade { get; set; }
    }
}