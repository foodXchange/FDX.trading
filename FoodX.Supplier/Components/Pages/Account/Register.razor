@page "/register"
@using Microsoft.AspNetCore.Identity
@using FoodX.Supplier.Models
@using MudBlazor
@inject UserManager<FoodX.Supplier.Models.ApplicationUser> UserManager
@inject SignInManager<FoodX.Supplier.Models.ApplicationUser> SignInManager
@inject NavigationManager Navigation
@inject ISnackbar Snackbar

<PageTitle>Register - FoodX Supplier Portal</PageTitle>

<MudContainer MaxWidth="MaxWidth.Small" Class="mt-8">
    <MudPaper Class="pa-8" Elevation="2">
        <MudText Typo="Typo.h4" Align="Align.Center" Class="mb-6">Supplier Registration</MudText>
        <MudText Typo="Typo.body2" Align="Align.Center" Class="mb-6" Color="Color.Tertiary">
            Join thousands of suppliers on FoodX Marketplace
        </MudText>
        
        <EditForm Model="@model" OnValidSubmit="RegisterUser">
            <DataAnnotationsValidator />
            
            <MudGrid>
                <MudItem xs="12" sm="6">
                    <MudTextField Label="First Name" 
                                  @bind-Value="model.FirstName" 
                                  For="@(() => model.FirstName)"
                                  Variant="Variant.Outlined"
                                  Required="true"
                                  Class="mb-4" />
                </MudItem>
                <MudItem xs="12" sm="6">
                    <MudTextField Label="Last Name" 
                                  @bind-Value="model.LastName" 
                                  For="@(() => model.LastName)"
                                  Variant="Variant.Outlined"
                                  Required="true"
                                  Class="mb-4" />
                </MudItem>
            </MudGrid>
            
            <MudTextField Label="Company Name" 
                          @bind-Value="model.CompanyName" 
                          For="@(() => model.CompanyName)"
                          Variant="Variant.Outlined"
                          Required="true"
                          Class="mb-4" />
            
            <MudTextField Label="Your Role in Company" 
                          @bind-Value="model.CompanyRole" 
                          For="@(() => model.CompanyRole)"
                          Variant="Variant.Outlined"
                          HelperText="e.g., Sales Manager, CEO, Export Director"
                          Class="mb-4" />
            
            <MudTextField Label="Email Address" 
                          @bind-Value="model.Email" 
                          For="@(() => model.Email)"
                          Variant="Variant.Outlined"
                          Required="true"
                          InputType="InputType.Email"
                          Class="mb-4" />
            
            <MudTextField Label="Phone Number" 
                          @bind-Value="model.PhoneNumber" 
                          For="@(() => model.PhoneNumber)"
                          Variant="Variant.Outlined"
                          HelperText="Include country code (e.g., +48 123 456 789)"
                          Class="mb-4" />
            
            <MudSelect T="string" Label="Country" 
                       @bind-Value="model.Country" 
                       Variant="Variant.Outlined"
                       Required="true"
                       Class="mb-4">
                <MudSelectItem Value="@("Poland")">Poland</MudSelectItem>
                <MudSelectItem Value="@("Germany")">Germany</MudSelectItem>
                <MudSelectItem Value="@("France")">France</MudSelectItem>
                <MudSelectItem Value="@("Italy")">Italy</MudSelectItem>
                <MudSelectItem Value="@("Spain")">Spain</MudSelectItem>
                <MudSelectItem Value="@("Netherlands")">Netherlands</MudSelectItem>
                <MudSelectItem Value="@("Belgium")">Belgium</MudSelectItem>
                <MudSelectItem Value="@("United Kingdom")">United Kingdom</MudSelectItem>
                <MudSelectItem Value="@("United States")">United States</MudSelectItem>
                <MudSelectItem Value="@("Other")">Other</MudSelectItem>
            </MudSelect>
            
            <MudTextField Label="Password" 
                          @bind-Value="model.Password" 
                          For="@(() => model.Password)"
                          Variant="Variant.Outlined"
                          Required="true"
                          InputType="InputType.Password"
                          HelperText="At least 8 characters with uppercase, lowercase, and numbers"
                          Class="mb-4" />
            
            <MudTextField Label="Confirm Password" 
                          @bind-Value="model.ConfirmPassword" 
                          For="@(() => model.ConfirmPassword)"
                          Variant="Variant.Outlined"
                          Required="true"
                          InputType="InputType.Password"
                          Class="mb-4" />
            
            <MudCheckBox @bind-Value="model.AcceptTerms" 
                         Color="Color.Primary"
                         Class="mb-4">
                I accept the <MudLink Href="/terms">Terms of Service</MudLink> and <MudLink Href="/privacy">Privacy Policy</MudLink>
            </MudCheckBox>
            
            <MudButton ButtonType="ButtonType.Submit" 
                       Variant="Variant.Filled" 
                       Color="Color.Primary" 
                       Size="Size.Large"
                       FullWidth="true"
                       Disabled="@isLoading"
                       Class="mb-4">
                @if (isLoading)
                {
                    <MudProgressCircular Class="ms-n1" Size="Size.Small" Indeterminate="true"/>
                    <MudText Class="ms-2">Creating Account...</MudText>
                }
                else
                {
                    <MudText>Create Supplier Account</MudText>
                }
            </MudButton>
            
            <MudText Align="Align.Center">
                Already have an account? <MudLink Href="/login">Sign in here</MudLink>
            </MudText>
        </EditForm>
    </MudPaper>
</MudContainer>

@code {
    private RegisterModel model = new();
    private bool isLoading = false;

    private async Task RegisterUser()
    {
        if (!model.AcceptTerms)
        {
            Snackbar.Add("Please accept the Terms of Service to continue", Severity.Warning);
            return;
        }

        if (model.Password != model.ConfirmPassword)
        {
            Snackbar.Add("Passwords do not match", Severity.Error);
            return;
        }

        isLoading = true;
        
        try
        {
            var user = new FoodX.Supplier.Models.ApplicationUser
            {
                UserName = model.Email,
                Email = model.Email,
                FirstName = model.FirstName,
                LastName = model.LastName,
                CompanyName = model.CompanyName,
                CompanyRole = model.CompanyRole,
                Country = model.Country,
                PhoneNumber = model.PhoneNumber,
                CreatedAt = DateTime.UtcNow,
                IsActive = true
            };

            var result = await UserManager.CreateAsync(user, model.Password);
            
            if (result.Succeeded)
            {
                // Add to Supplier role
                await UserManager.AddToRoleAsync(user, "Supplier");
                
                // Sign in the user
                await SignInManager.SignInAsync(user, isPersistent: false);
                
                Snackbar.Add("Registration successful! Welcome to FoodX", Severity.Success);
                Navigation.NavigateTo("/profile/setup");
            }
            else
            {
                foreach (var error in result.Errors)
                {
                    Snackbar.Add(error.Description, Severity.Error);
                }
            }
        }
        catch (Exception ex)
        {
            Snackbar.Add($"Registration failed: {ex.Message}", Severity.Error);
        }
        finally
        {
            isLoading = false;
        }
    }

    public class RegisterModel
    {
        public string FirstName { get; set; } = string.Empty;
        public string LastName { get; set; } = string.Empty;
        public string CompanyName { get; set; } = string.Empty;
        public string CompanyRole { get; set; } = string.Empty;
        public string Email { get; set; } = string.Empty;
        public string PhoneNumber { get; set; } = string.Empty;
        public string Country { get; set; } = string.Empty;
        public string Password { get; set; } = string.Empty;
        public string ConfirmPassword { get; set; } = string.Empty;
        public bool AcceptTerms { get; set; } = false;
    }
}